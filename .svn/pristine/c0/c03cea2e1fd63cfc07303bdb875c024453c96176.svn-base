package com.t05g1.controller;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.t05g1.pojo.Admins;
import com.t05g1.pojo.Brand;
import com.t05g1.pojo.Category;
import com.t05g1.pojo.Colour;
import com.t05g1.pojo.Commodity;
import com.t05g1.pojo.Commtypepricr;
import com.t05g1.service.BrandService;
import com.t05g1.service.CategoryService;
import com.t05g1.service.ColourService;
import com.t05g1.service.CommodityService;
import com.t05g1.service.CommotypepricrService;

@Controller
@RequestMapping("/adminCommodity")
public class Admin_CommodityMG_Controller {
	
	@Autowired
	private CommodityService commodityService; 

    @Autowired
    private CategoryService categoryService;
    
    @Autowired
    private BrandService brandService;
    
    @Autowired
    private ColourService colourService;
    
    @Autowired
    private CommotypepricrService commotypepricrService;
    
    /**上传地址*/
    @Value("${file.upload.path}")
    private String filePath;
	
    
    //商品列表
    @RequestMapping("productlist.do")
    public ModelAndView  productlist(ModelAndView mv){
  	//获取商品类型
     List<Category> catList = categoryService.selectByExample();
     //获取品牌类型
     List<Brand> braList = brandService.selectByExample();
     
      mv.addObject("catList",catList);
      mv.addObject("braList",braList);
     
      
     //mv.setViewName("admin/TestPage.html");
      mv.setViewName("admin/product-list.html");
		
		return mv;
  }

   //商品列表带分页
        @ResponseBody
        @RequestMapping("showData.do")
        public Map<String,Object> methodx(
                @RequestParam( value="page",required=false,defaultValue="1") int curr,
                @RequestParam(value="limit",required=false,defaultValue="10") int limit,
                @RequestParam(value="c_name",required=false) String c_name,
    			@RequestParam(value="c_categoryId",required=false,defaultValue="0") int c_categoryId
        ){
        	System.out.println(c_categoryId);
        	System.out.println(curr);
        	System.out.println(limit);
        List<Commodity> datas=commodityService.queryAllDataFromTable(curr, limit,c_name,c_categoryId);
            int countx=commodityService.queryAllCount(c_name,c_categoryId);
            Map<String,Object> map=new HashMap<String,Object>();
            map.put("code",0);
            map.put("msg","");
            map.put("count",countx);
            map.put("data",datas);
            System.out.println(map.toString());
            return map;
        }
        //添加商品页面
        @RequestMapping("productadd.do")
        public ModelAndView  productadd(ModelAndView mv){
      	//获取商品类型
         List<Category> catList = categoryService.selectByExample();
        //获取商品列表
         List<Brand> braList = brandService.selectByExample();
        //获取颜色
         List<Colour> colList = colourService.selectByExample();
        //获取版本
         List<Commtypepricr> comList = commotypepricrService.selectByExample();
         
          mv.addObject("braList",braList);    
          mv.addObject("catList",catList);
          mv.addObject("colList",colList);
          mv.addObject("comList",comList);
          
         //mv.setViewName("admin/TestPage.html");
          mv.setViewName("admin/product-add.html");
    		
    		return mv;
      } 
     
      //商品图片上传
        @RequestMapping(value="updateProductImg.do")
        public @ResponseBody String updatePersonal(@RequestParam("file") MultipartFile file,@ModelAttribute Admins ui,HttpServletRequest request) throws IllegalStateException, IOException{
            //获取上传文件名
            String oldName = file.getOriginalFilename();
            //定义上传文件路径
            String path = filePath+"productPhoto/";
            //改名卡
            String fileName = changeName(oldName);
            //文件相对路径
            String rappendix = "/upload/productPhoto/" + fileName;
            //文件绝对路径
            fileName = path + File.separator + fileName;
           // 新建文件
            File file1 = new File(fileName);
            if(!file1.exists()){
                //先得到文件的上级目录，并创建上级目录，在创建文件
                file1.getParentFile().mkdir();
                try {
                    //创建文件
                    file1.createNewFile();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
             // 写入文件
            file.transferTo(file1);

            String str = "{\"code\": 0,\"msg\": \"\",\"data\": {\"src\":\"" + rappendix + "\"}}";
            System.out.println(str);
            System.out.println(file1);
            return str;

        }
        //改名卡
        public static String changeName(String oldName){

            Random r = new Random();

            Date d = new Date();

            String newName = oldName.substring(oldName.indexOf('.'));

            newName = r.nextInt(99999999) + d.getTime() + newName;
            System.out.println(newName);
            return newName;

        }
       @ResponseBody
       @RequestMapping(value="addproduct.do")
       public Map<String,Object> addProduct(@ModelAttribute Commodity commodity) {
    	   
    	 Map<String,Object> map = new HashMap<>();  
    	   
    	int res = commodityService.addProduct(commodity);
    	
    	map.put("res",res);
    	   
		return map;

    	   
       }
}
    
