package com.t05g1.controller;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.Random;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.t05g1.pojo.Admins;
import com.t05g1.service.AdminService;

@Controller
@RequestMapping("/admin")
public class AdminController {
	
	@Autowired
	private AdminService adminService; 
	
	 /**上传地址*/
    @Value("${file.upload.path}")
    private String filePath;
	
	//登录
	@RequestMapping("login.do")
	public ModelAndView login(ModelAndView mv, HttpSession session,String name,String password){
		Admins admin = adminService.adminLogin(name,password);
		if(admin != null) {
			session.setAttribute("admin",admin);
			mv.setViewName("redirect:/admin/index.do");	
		}else {
			mv.setViewName("redirect:/login.html");
		}
		return mv;
	}
	
    //头像上传
    @RequestMapping(value="updatePersonalById.do")
    public @ResponseBody String updatePersonal(@RequestParam("file") MultipartFile file,@ModelAttribute Admins ui,HttpServletRequest request) throws IllegalStateException, IOException{
        //获取上传文件名
        String oldName = file.getOriginalFilename();
        //定义上传文件路径
        String path = filePath+"adminPhoto/";
        //改名卡
        String fileName = changeName(oldName);
        //文件相对路径
        String rappendix = "/upload/adminPhoto/" + fileName;
        //文件绝对路径
        fileName = path + File.separator + fileName;
       // 新建文件
        File file1 = new File(fileName);
        if(!file1.exists()){
            //先得到文件的上级目录，并创建上级目录，在创建文件
            file1.getParentFile().mkdir();
            try {
                //创建文件
                file1.createNewFile();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
         // 写入文件
        file.transferTo(file1);

        String str = "{\"code\": 0,\"msg\": \"\",\"data\": {\"src\":\"" + rappendix + "\"}}";
        System.out.println(str);
        System.out.println(file1);
        return str;

    }

    public static String changeName(String oldName){

        Random r = new Random();

        Date d = new Date();

        String newName = oldName.substring(oldName.indexOf('.'));

        newName = r.nextInt(99999999) + d.getTime() + newName;
        System.out.println(newName);
        return newName;

    }

    @RequestMapping(value="updatePersonalByIdSuccess.do")

    public  String updatePersonalByIdSuccess(@ModelAttribute Admins ui){ 
        
        int a = adminService.Update(ui);

        if(a!=0){

            return "redirect:index.do";

        }

        return "error";

    }


	//主页数据
    @RequestMapping("index.do")
      public ModelAndView index(ModelAndView mv){
    	
        mv.setViewName("admin/index.html");
    	
		return mv;
    }
    //进入首页
    @RequestMapping("home.do")
    public ModelAndView comeindex(ModelAndView mv){
  	
      mv.setViewName("admin/home.html");
  	
		return mv;
  }
    
    //打开个人信息
    @RequestMapping("personalinfomation.do")
    public ModelAndView personalinfomation(ModelAndView mv){
  	
    long id= 1;
    
    Admins admins = adminService.FindUserByUserId(id);
    
    System.out.println(admins.toString());
     mv.addObject("admins",admins);
      
     mv.setViewName("admin/updatefile.html");
  	
	return mv;
  }
    
    //打开品牌管理
    @RequestMapping("brandlist.do")
    public ModelAndView  brandlist(ModelAndView mv){
  	
      mv.setViewName("admin/brand-list.html");
  	
		return mv;
  }
   
  //打开分类管理
    @RequestMapping("producttypelist.do")
    public ModelAndView  producttypelist(ModelAndView mv){
  	
      mv.setViewName("admin/product-typelist.html");
  	
		return mv;
  }
    
}
